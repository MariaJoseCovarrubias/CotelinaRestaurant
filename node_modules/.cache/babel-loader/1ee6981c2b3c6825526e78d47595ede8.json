{"ast":null,"code":"import _slicedToArray from \"/Users/cotelina/Desktop/restaurant/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Container } from 'react-bootstrap';\nfunction IngredientsDisplay() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ingredients = _useState2[0],\n    setIngredients = _useState2[1]; // Waiting for endpoint to be ready\n  useEffect(function () {\n    fetch('https://tarea-1.2023-1.tallerdeintegracion.cl/ingredients').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setIngredients(json);\n    });\n  }, []);\n\n  //isplay ingredients\n\n  // return (\n  //   <div>\n  //     <Container className=\"title-text\">\n  //       Ingredientes\n  //     </Container>\n  //     <Container className=\"ingredients-container\">\n\n  //       {ingredients.map((ingredient) => (\n  //         <Card className=\"ingredient-card\">\n  //           <Card.Body>\n  //             <Card.Title>{ingredient.name}</Card.Title>\n  //             <Card.Text>\n  //               {ingredient.price}\n  //             </Card.Text>\n  //           </Card.Body>\n  //         </Card>\n  //       ))}\n  //     </Container>\n  //   </div>\n  // );\n}\n\nexport default IngredientsDisplay;","map":{"version":3,"names":["React","useEffect","useState","Card","Container","IngredientsDisplay","_useState","_useState2","_slicedToArray","ingredients","setIngredients","fetch","then","response","json"],"sources":["/Users/cotelina/Desktop/restaurant/src/ingredients.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Card, Container,\n} from 'react-bootstrap'\n\nfunction IngredientsDisplay() {\n  const [ingredients, setIngredients] = useState([]);\n\n  // Waiting for endpoint to be ready\n  useEffect(() => {\n    fetch('https://tarea-1.2023-1.tallerdeintegracion.cl/ingredients')\n      .then((response) => response.json())\n      .then((json) => setIngredients(json));\n  }, []);\n\n  //isplay ingredients\n\n  // return (\n  //   <div>\n  //     <Container className=\"title-text\">\n  //       Ingredientes\n  //     </Container>\n  //     <Container className=\"ingredients-container\">\n        \n  //       {ingredients.map((ingredient) => (\n  //         <Card className=\"ingredient-card\">\n  //           <Card.Body>\n  //             <Card.Title>{ingredient.name}</Card.Title>\n  //             <Card.Text>\n  //               {ingredient.price}\n  //             </Card.Text>\n  //           </Card.Body>\n  //         </Card>\n  //       ))}\n  //     </Container>\n  //   </div>\n  // );\n\n}\n\nexport default IngredientsDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,IAAI,EAAEC,SAAS,QACV,iBAAiB;AAExB,SAASC,kBAAkBA,CAAA,EAAG;EAAA,IAAAC,SAAA,GACUJ,QAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA,KAElC;EACAN,SAAS,CAAC,YAAM;IACdU,KAAK,CAAC,2DAA2D,CAAC,CAC/DC,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;IAAA,EAAC,CACnCF,IAAI,CAAC,UAACE,IAAI;MAAA,OAAKJ,cAAc,CAACI,IAAI,CAAC;IAAA,EAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEF;;AAEA,eAAeT,kBAAkB"},"metadata":{},"sourceType":"module"}